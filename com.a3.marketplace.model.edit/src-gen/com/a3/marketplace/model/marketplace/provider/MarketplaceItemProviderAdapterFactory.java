/**
 */
package com.a3.marketplace.model.marketplace.provider;

import com.a3.marketplace.model.marketplace.util.MarketplaceAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MarketplaceItemProviderAdapterFactory extends MarketplaceAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MarketplaceItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Marketplace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarketplaceItemProvider marketplaceItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Marketplace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarketplaceAdapter() {
		if (marketplaceItemProvider == null) {
			marketplaceItemProvider = new MarketplaceItemProvider(this);
		}

		return marketplaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.User} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserItemProvider userItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.User}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserAdapter() {
		if (userItemProvider == null) {
			userItemProvider = new UserItemProvider(this);
		}

		return userItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.UserAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserAttributeItemProvider userAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.UserAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserAttributeAdapter() {
		if (userAttributeItemProvider == null) {
			userAttributeItemProvider = new UserAttributeItemProvider(this);
		}

		return userAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.ProductListing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductListingItemProvider productListingItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.ProductListing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductListingAdapter() {
		if (productListingItemProvider == null) {
			productListingItemProvider = new ProductListingItemProvider(this);
		}

		return productListingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.ProductListingAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductListingAttributeItemProvider productListingAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.ProductListingAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductListingAttributeAdapter() {
		if (productListingAttributeItemProvider == null) {
			productListingAttributeItemProvider = new ProductListingAttributeItemProvider(this);
		}

		return productListingAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Product} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductItemProvider productItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Product}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAdapter() {
		if (productItemProvider == null) {
			productItemProvider = new ProductItemProvider(this);
		}

		return productItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.ProductAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductAttributeItemProvider productAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.ProductAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAttributeAdapter() {
		if (productAttributeItemProvider == null) {
			productAttributeItemProvider = new ProductAttributeItemProvider(this);
		}

		return productAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Action} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionItemProvider actionItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Action}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionAdapter() {
		if (actionItemProvider == null) {
			actionItemProvider = new ActionItemProvider(this);
		}

		return actionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.MessageAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageAttributeItemProvider messageAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.MessageAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAttributeAdapter() {
		if (messageAttributeItemProvider == null) {
			messageAttributeItemProvider = new MessageAttributeItemProvider(this);
		}

		return messageAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.Filter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterItemProvider filterItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.Filter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterAdapter() {
		if (filterItemProvider == null) {
			filterItemProvider = new FilterItemProvider(this);
		}

		return filterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.AttributeMetadataSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeMetadataSpecificationItemProvider attributeMetadataSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.AttributeMetadataSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeMetadataSpecificationAdapter() {
		if (attributeMetadataSpecificationItemProvider == null) {
			attributeMetadataSpecificationItemProvider = new AttributeMetadataSpecificationItemProvider(this);
		}

		return attributeMetadataSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.AttributeMetadata} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeMetadataItemProvider attributeMetadataItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.AttributeMetadata}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeMetadataAdapter() {
		if (attributeMetadataItemProvider == null) {
			attributeMetadataItemProvider = new AttributeMetadataItemProvider(this);
		}

		return attributeMetadataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.a3.marketplace.model.marketplace.NamedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedElementItemProvider namedElementItemProvider;

	/**
	 * This creates an adapter for a {@link com.a3.marketplace.model.marketplace.NamedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedElementAdapter() {
		if (namedElementItemProvider == null) {
			namedElementItemProvider = new NamedElementItemProvider(this);
		}

		return namedElementItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (marketplaceItemProvider != null)
			marketplaceItemProvider.dispose();
		if (userItemProvider != null)
			userItemProvider.dispose();
		if (userAttributeItemProvider != null)
			userAttributeItemProvider.dispose();
		if (attributeItemProvider != null)
			attributeItemProvider.dispose();
		if (productListingItemProvider != null)
			productListingItemProvider.dispose();
		if (productListingAttributeItemProvider != null)
			productListingAttributeItemProvider.dispose();
		if (productItemProvider != null)
			productItemProvider.dispose();
		if (productAttributeItemProvider != null)
			productAttributeItemProvider.dispose();
		if (actionItemProvider != null)
			actionItemProvider.dispose();
		if (messageItemProvider != null)
			messageItemProvider.dispose();
		if (messageAttributeItemProvider != null)
			messageAttributeItemProvider.dispose();
		if (filterItemProvider != null)
			filterItemProvider.dispose();
		if (attributeMetadataSpecificationItemProvider != null)
			attributeMetadataSpecificationItemProvider.dispose();
		if (attributeMetadataItemProvider != null)
			attributeMetadataItemProvider.dispose();
		if (namedElementItemProvider != null)
			namedElementItemProvider.dispose();
	}

}
